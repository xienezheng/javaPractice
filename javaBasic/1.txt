mport java.io.*;
import java.util.*;

public class Employee implements Serializable {

private int employeeNumber;
private String employeeName;

Employee(int num, String name) {
employeeNumber = num;
employeeName= name;
}

public int getEmployeeNumber() {
return employeeNumber ;
}

public void setEmployeeNumber(int num) {
employeeNumber = num;
}

public String getEmployeeName() {
return employeeName ;
}

public void setEmployeeName(String name) {
employeeName = name;
}
}
client¿‡£∫
import java.io.*;

import java.net.*;



public class Client {



   public static void main(String[] arg) {

      try {

         Employee joe = new Employee(150, "Joe");



         System.out.println("employeeNumber= "

                              joe .getEmployeeNumber());

         System.out.println("employeeName= "

                              joe .getEmployeeName());



         Socket socketConnection = new Socket("127.0.0.1", 11111);





         ObjectOutputStream clientOutputStream = new

            ObjectOutputStream(socketConnection.getOutputStream());

         ObjectInputStream clientInputStream = new 

            ObjectInputStream(socketConnection.getInputStream());



         clientOutputStream.writeObject(joe);



         joe= (Employee)clientInputStream.readObject();



         System.out.println("employeeNumber= "

                              joe .getEmployeeNumber());

         System.out.println("employeeName= "

                              joe .getEmployeeName());



         clientOutputStream.close();

         clientInputStream.close();



      } catch (Exception e) {System.out.println(e); }

   }

}

Server¿‡£∫
import java.io.*;
import java.net.*;

public class Server {

public static void main(String[] arg) {

Employee employee = null;

try {

ServerSocket socketConnection = new ServerSocket(11111);

System.out.println("Server Waiting");

Socket pipe = socketConnection.accept();

ObjectInputStream serverInputStream = new 
ObjectInputStream(pipe.getInputStream());

ObjectOutputStream serverOutputStream = new 
ObjectOutputStream(pipe.getOutputStream());

employee = (Employee )serverInputStream.readObject();

employee .setEmployeeNumber(256);
employee .setEmployeeName("John");

serverOutputStream.writeObject(employee);

serverInputStream.close();
serverOutputStream.close();


} catch(Exception e) {System.out.println(e); 
}
}

}